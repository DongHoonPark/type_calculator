{"version":3,"sources":["Misc.ts","components/CalcPanel.tsx","pages/Fixed.tsx","pages/Floating.tsx","pages/About.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/About.md"],"names":["is_signed_fixed","type","RegExp","test","toLowerCase","is_fixed","is_unsigned_fixed","isNumber","input","get_type_bitlens","bits","split","map","x","parseInt","hex2val","hex","bitlens","val","integer","ret","i","reduce","a","c","push","reverse","hex2bits","Buffer","from","readFloatBE","readDoubleBE","val2hex","resolution","Math","round","bitlen","hexlen","ceil","places","toString","padStart","length","slice","buf","alloc","writeFloatBE","toJSON","data","join","writeDoubleBE","CalcPanel","hexRef","useRef","valueRef","useState","setHex","value","setValue","convDirection","setConvDirection","useEffect","current","fromValue","hexUpdate","parseFloat","toValue","onEnterPressed","e","key","target","Form","Group","Label","Control","placeholder","onKeyPress","onChange","name","charAt","ref","Button","onClick","FixedPage","integerRef","fractionRef","setType","signed","setSigned","setInteger","fraction","setFraction","onTypeNumberInputChanged","concat","Container","Row","as","Col","controlId","defaultValue","FloatingPage","AboutPage","aboutMarkdownPath","require","markdown","setMarkdown","console","log","fetch","file","then","res","text","plugins","gfm","emoji","children","App","link_style","textDecoration","color","basename","process","exact","to","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","style","path","Floating","Fixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15dbc66c.chunk.js","sourcesContent":["const is_unsigned_fixed = (type:string)=>RegExp(\"^uq[0-9]+\\\\.[0-9]+$\").test(type.toLowerCase())\r\nconst is_signed_fixed   = (type:string)=>RegExp(\"^q[0-9]+\\\\.[0-9]+$\").test(type.toLowerCase())\r\nconst is_fixed          = (type:string)=>is_signed_fixed(type)||is_unsigned_fixed(type)\r\nexport const isNumber = (input : string) =>{ return '0' <= input && input <= '9'}\r\n\r\nexport function get_type_bitlens(type : string){\r\n    type = type.toLowerCase()\r\n    let extract_bit = (fixed_type:string)=>{\r\n        return fixed_type.split(\"q\")[1].split(\".\").map((x)=>(parseInt(x)))\r\n    }\r\n                \r\n    if(is_fixed(type)){\r\n        let bits = extract_bit(type)\r\n        return [is_signed_fixed(type)? 1 : 0, ...bits]\r\n    }\r\n    else if(type === 'float32'){\r\n        return [1, 8, 23]\r\n    }\r\n    else if(type === 'float64'){\r\n        return [1, 11, 52]\r\n    }\r\n    else{\r\n        //no match type\r\n        return [0,0,0]\r\n    }        \r\n}\r\n            \r\nexport function hex2bits(hex : string, type : string){\r\n    let integer = parseInt(hex, 16)\r\n    let ret = []\r\n    for(let i = 0; i < get_type_bitlens(type).reduce((a,c)=>a+c); i++){\r\n        ret.push(integer&(1<<i) ? 1 : 0)\r\n    }\r\n    return ret.reverse()\r\n}\r\n\r\nexport function bits2hex(bits : number[]){\r\n    const integer2hex = (num : number, places : number) => num.toString(16).padStart(places, '0')\r\n    let integer = 0;\r\n    for(let i = 0; i < bits.length; i++){\r\n        if(bits.reverse()[i] == 1){\r\n            integer += (1<<i)\r\n        }\r\n    }\r\n    let hexlen = Math.ceil(bits.length / 4) \r\n\r\n    return integer2hex(integer, hexlen)\r\n}\r\n\r\nexport function hex2val(hex : string, type:string){\r\n    if(is_fixed(type)){\r\n        let bitlens = get_type_bitlens(type)\r\n        let integer = parseInt(hex, 16)\r\n        let unit = 1<<bitlens[2]\r\n        \r\n        let val = integer / unit\r\n\r\n        if(is_signed_fixed(type) && hex2bits(hex, type)[0] === 1){\r\n            val -= 1<< (1 + bitlens[1])\r\n        }\r\n        return val\r\n    }\r\n    else if(type === 'float32'){\r\n        return Buffer.from(hex, 'hex').readFloatBE(0)\r\n    }\r\n    else if(type === 'float64'){\r\n        return Buffer.from(hex, 'hex').readDoubleBE(0)\r\n    }\r\n    else{\r\n        return 0\r\n    }      \r\n}\r\n\r\nexport function val2hex(val : number, type:string){\r\n    if(is_fixed(type)){\r\n        const integer2hex = (num : number, places : number) => num.toString(16).padStart(places, '0')\r\n\r\n        let bitlens = get_type_bitlens(type)\r\n        let resolution = 1 / (1<<bitlens[2])\r\n\r\n        let integer = Math.round( val / resolution )\r\n        let bitlen = bitlens.reduce((a,c)=>a+c)\r\n        \r\n        if(integer < 0){\r\n            integer += 1 << bitlen + 1\r\n        }\r\n\r\n        let hexlen = Math.ceil(bitlen / 4) \r\n        let hex = integer2hex(integer, hexlen)\r\n\r\n        if(hex.length > hexlen){\r\n            hex = hex.slice(1)\r\n        }\r\n        return hex\r\n    }\r\n    else if(type === 'float32'){\r\n        let buf = Buffer.alloc(4)\r\n        buf.writeFloatBE(val, 0)\r\n        return buf.toJSON().data.map(x=>x.toString(16).padStart(2, '0')).join(\"\")\r\n    }\r\n    else if(type === 'float64'){\r\n        let buf = Buffer.alloc(8)\r\n        buf.writeDoubleBE(val, 0)\r\n        return buf.toJSON().data.map(x=>x.toString(16).padStart(2, '0')).join(\"\")\r\n    }\r\n    else{\r\n        return \"0\"\r\n    }    \r\n}\r\n\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Container, Form, Col, Button } from 'react-bootstrap';\r\nimport { get_type_bitlens, hex2val, val2hex, isNumber } from '../Misc';\r\n\r\ntype CalcPanelProps = {\r\n    type : string\r\n}\r\n\r\nexport default function CalcPanel({type}:CalcPanelProps){\r\n    \r\n    const hexRef = useRef<any>()\r\n    const valueRef = useRef<any>()\r\n\r\n    const [hex, setHex] = useState<string>(\"0\")\r\n    const [value, setValue] = useState<string>(\"0\")\r\n\r\n    const [convDirection, setConvDirection] = useState<string>(\"binary_to_value\")\r\n\r\n    useEffect(()=>{\r\n        valueRef.current.value = value\r\n    },[value])\r\n\r\n    useEffect(()=>{\r\n        hexRef.current.value = hex\r\n    },[hex])\r\n\r\n    const onHexInputChanged : React.ChangeEventHandler<HTMLInputElement> = (e) =>{\r\n        const { value, name } = e.target\r\n        let input = value.charAt(value.length - 1).toLowerCase()\r\n        setConvDirection(\"toValue\")\r\n        if(isNumber(input) || ('a' <= input && input <= 'f')){\r\n            setHex(e.target.value)\r\n        }\r\n        else{\r\n            e.target.value = value.slice(0, -1)\r\n        }\r\n    }\r\n\r\n    const fromValue = ()=>{\r\n        let hexUpdate = (val2hex(parseFloat(value), type).toString())\r\n        setHex(hexUpdate)\r\n        setValue((hex2val(hexUpdate, type).toString()))\r\n    }\r\n\r\n    const toValue = ()=>{\r\n        setValue((hex2val(hex, type).toString()))\r\n    }\r\n\r\n    const onEnterPressed : React.KeyboardEventHandler<HTMLInputElement>=(e)=>{\r\n        if (e.key === 'Enter') {\r\n            switch(e.target){\r\n                case valueRef.current:\r\n                    fromValue()\r\n                    break\r\n                case hexRef.current:\r\n                    toValue()\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    const onValueInputChanged : React.ChangeEventHandler<HTMLInputElement> = (e) =>{\r\n        setConvDirection(\"fromValue\")\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onCalculateButtonClicked : React.MouseEventHandler = ()=>{\r\n        switch(convDirection){\r\n            case \"fromValue\":\r\n                fromValue()\r\n                break\r\n            case \"toValue\":\r\n                toValue()\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Form.Group>\r\n            <Form.Label>Hex Representation</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"hex\" onKeyPress={onEnterPressed} onChange={onHexInputChanged} ref={hexRef}/>\r\n            <br/>\r\n            <Form.Label>Value</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"value in decimal\" onKeyPress={onEnterPressed} onChange={onValueInputChanged} ref={valueRef}/>\r\n        </Form.Group>\r\n        <br/>\r\n        <Button onClick={onCalculateButtonClicked}>Calculate</Button>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Container, Form, Col, Button } from 'react-bootstrap';\r\nimport CalcPanel from '../components/CalcPanel';\r\nimport { get_type_bitlens, hex2val, val2hex, isNumber } from '../Misc';\r\n\r\nfunction FixedPage(){\r\n    const integerRef = useRef<any>()\r\n    const fractionRef = useRef<any>()\r\n\r\n    const [type, setType]         = useState<string>(\"q0.0\")\r\n    const [signed, setSigned]     = useState<string>(\"q\")\r\n    const [integer, setInteger]   = useState<string>(\"0\")\r\n    const [fraction, setFraction] = useState<string>(\"0\")\r\n\r\n    const onTypeSignedInputChanged : React.ChangeEventHandler<HTMLInputElement> = (e) =>{\r\n        const { value, name } = e.target\r\n        if(value === \"Signed\")\r\n            setSigned(\"q\")\r\n        else\r\n            setSigned(\"uq\")\r\n\r\n    }\r\n    const onTypeNumberInputChanged : React.ChangeEventHandler<HTMLInputElement> = (e) =>{\r\n        const { value, name } = e.target\r\n        let input = value.charAt(value.length - 1)\r\n        if(!isNumber(input)){\r\n            e.target.value = value.slice(0, -1)\r\n        }\r\n        switch(e.target){\r\n            case integerRef.current:\r\n                setInteger(e.target.value)\r\n                break\r\n            case fractionRef.current:\r\n                setFraction(e.target.value)\r\n                break\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setType(\"\".concat(signed?signed:\"\" , integer?integer:\"\", \".\", fraction?fraction:\"\"))\r\n    }, [signed, integer, fraction])\r\n\r\n\r\n    return(\r\n        <>\r\n        <Container>\r\n            <p></p>\r\n            <Form>\r\n            <Form.Label>Q-Fixed Type : {type} / {get_type_bitlens(type?type:\"q0.0\").reduce((a,c)=>a+c)}bit</Form.Label>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"signed\">\r\n                    <Form.Control as=\"select\" defaultValue=\"Signed\" onChange={onTypeSignedInputChanged}>\r\n                        <option>Signed</option>\r\n                        <option>Unsigned</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"integer\" >\r\n                    <Form.Control type=\"text\" placeholder=\"Integer\" defaultValue={0} onChange={onTypeNumberInputChanged} ref={integerRef}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"fraction\">\r\n                <Form.Control type=\"text\" placeholder=\"Fraction\" defaultValue={0} onChange={onTypeNumberInputChanged} ref={fractionRef}/>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            </Form>\r\n            <CalcPanel type={type}></CalcPanel>\r\n        </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FixedPage","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Container, Form, Col, Button } from 'react-bootstrap';\r\nimport CalcPanel from '../components/CalcPanel';\r\nimport { get_type_bitlens, hex2val, val2hex, isNumber } from '../Misc';\r\n\r\nfunction FloatingPage(){\r\n    const [type, setType] = useState<string>(\"float32\")\r\n\r\n    const onTypeChange : React.ChangeEventHandler<HTMLInputElement> = (e) =>{\r\n        const { value, name } = e.target\r\n        switch(value){\r\n            case 'Single 32b':\r\n                setType('float32')\r\n                break\r\n            case 'Double 64b':\r\n                setType('float64')\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Container>\r\n            <p></p>\r\n            <Form>\r\n            <Form.Label>IEEE754 Float Type</Form.Label>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"signed\">\r\n                    <Form.Control as=\"select\" defaultValue=\"Single 32b\" onChange={onTypeChange}>\r\n                        <option>Single 32b</option>\r\n                        <option>Double 64b</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            </Form>\r\n            <CalcPanel type = {type} />\r\n        </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FloatingPage","import { Container, Jumbotron } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from 'remark-gfm'\r\nimport emoji from 'remark-emoji'\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//@ts-ignore\r\nimport file from \"./About.md\"\r\n\r\nfunction AboutPage(){\r\n    const aboutMarkdownPath = require(\"./About.md\")\r\n    const [markdown, setMarkdown] = useState(\"\")\r\n\r\n    console.log(aboutMarkdownPath)\r\n\r\n    useEffect(() => {\r\n        fetch(file)\r\n          .then((res) => res.text())\r\n          .then((text) => setMarkdown(text));\r\n      }, []);\r\n\r\n    return(\r\n        <>\r\n        <p></p>\r\n        <Container>\r\n            <ReactMarkdown plugins={[gfm, emoji]} children={markdown}/>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutPage","import React, { CSSProperties } from 'react';\r\nimport logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\"\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport {AiFillCalculator} from 'react-icons/ai'\r\nimport {FaCalculator} from 'react-icons/fa'\r\nimport FixedPage from './pages/Fixed';\r\nimport FloatingPage from './pages/Floating';\r\nimport AboutPage from './pages/About';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  let link_style : CSSProperties = {\r\n    textDecoration : 'inherit',\r\n    color : 'inherit'\r\n  }\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Redirect exact from=\"/\" to=\"/fixed\" />\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand> <FaCalculator/> Type Calculator </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav>\r\n              <Nav.Link><Link to=\"/float\" style={link_style}>Floating Point</Link></Nav.Link>\r\n              <Nav.Link><Link to=\"/fixed\"  style={link_style}>Fixed Point</Link></Nav.Link>\r\n              <Nav.Link><Link to=\"/about\"  style={link_style}>About</Link></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route path=\"/float\"><FloatingPage></FloatingPage></Route>\r\n          <Route path=\"/fixed\"><FixedPage></FixedPage></Route>\r\n          <Route path=\"/about\"><AboutPage></AboutPage></Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/About.92a792de.md\";"],"sourceRoot":""}